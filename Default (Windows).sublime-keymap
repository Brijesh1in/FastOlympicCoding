[
	{ 
		"keys": ["shift+tab"], 
		"command": "olympic_funcs",
		"args": {
			"action": "insert_pregen_class"
		},
		"context": [
			{
				"operand": "source.c++",
				"operator": "equal",
				"match_all": true,
				"key" : "selector"
			},
			// {
			// 	"key": "preceding_text",
			// 	"operator": "regex_contains",
			// 	"operand": ".+([a-z]+)",
			// 	"match_all": true
			// },
			// {
			// 	"key": "following_text",
			// 	"operator": "not_regex_contains",
			// 	"operand": ".{1,}",
			// 	"match_all": true
			// },
			// {
			// 	"key" : "olympic_funcs",
			// 	"args": {
			// 		"action": "can_pregen_classes"
			// 	},
			// 	"operator": "equal", 
			// 	"operand": true
			// }
		]
	},

	{ 
		"keys": ["tab"], 
		"command": "olympic_funcs",
		"args": {
			"action": "fast_gen"
		},
		"context": [
			{
				"operand": "source.c++",
				"operator": "equal",
				"match_all": true,
				"key" : "selector"
			},
			{
				"operand": "meta.block.c, meta.block.c++",
				"operator": "equal",
				"match_all": false,
				"key" : "selector"
			},
			{
				"key": "preceding_text",
				"operator": "regex_contains",
				// "operand": "[[:word:]]+",
				"operand": "([\t ]+)(f )(.+)",
				"match_all": true
			},
			{
				"key": "following_text",
				"operator": "not_regex_contains",
				"operand": ".{1,}",
				"match_all": true
			},
		]
	},

	
	{ 
		"keys": ["tab"], 
		"command": "olympic_funcs",
		"args": {
			"action": "gen_def"
		},
		"context": [
			{
				"operand": "meta.block.c, meta.function.c",
				"operator": "not_equal",
				"match_all": true,
				"key" : "selector"
			},
			{
				"operand": "meta.block.c++, meta.function.c++",
				"operator": "not_equal",
				"match_all": true,
				"key": "selector"
			},
			{
				"key": "preceding_text",
				"operator": "not_regex_contains",
				// "operand": "[[:word:]]+",
				"operand": "([\t ]+)(f )(.+)",
				"match_all": true
			},
			{
				"operand": "source.c++",
				"operator": "equal",
				"match_all": true,
				"key" : "selector"
			}
		]
	},

	{
		"keys": ["enter"],
		"command": "test_manager",
		"args": {
			"action": "insert_line"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	{
		"keys": ["ctrl+enter"],
		"command": "test_manager",
		"args": {
			"action": "new_test"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	{
		"keys": ["ctrl+v"],
		"command": "test_manager",
		"args": {
			"action": "insert_cb"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	// Terminate Process in OPD
	{
		"keys": ["ctrl+c"],
		"command": "test_manager",
		"args": {
			"action": "kill_proc"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	// Delete Test
	{
		"keys": ["ctrl+d"],
		"command": "test_manager",
		"args": {
			"action": "delete_tests"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	// Accept Test
	{
		"keys": ["super+ctrl+o"],
		"command": "test_manager",
		"args": {
			"action": "accept_test"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	// Decline Test
	{
		"keys": ["super+ctrl+p"],
		"command": "test_manager",
		"args": {
			"action": "decline_test"
		},
		"context": [
			{
				"operand": "source.OPDebugger",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	// Run
	{
		"keys": ["ctrl+shift+b"],
		"command": "view_tester",
		"args": {
			"action": "make_opd"
		},
		"context": [
			{
				"key" :"selector",
				"operand": "source.c++, source.python, source.pascal, source.cs",
				"operator": "equal",
				"match_all": true
			}
		]
	},

	// Show All Olympic Functions
	{
		"keys": ["ctrl+shift+o"],
		"command": "olympic_funcs",
		"args": {
			"action": "show_funcs"
		},
		"context": [
			{
				"operand": "source.c++",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	{
		"keys": ["ctrl+shift+alt+o"],
		"command": "inteli_sense",
		"args": {
			"action": "sync_sense"
		},
		"context": [
			{
				"operand": "source.c++",
				"operator": "equal",
				"match_all": true,
				"key": "selector"
			}
		]
	},

	{
		"keys": ["ctrl+k", "ctrl+right"],
		"command": "view_tester",
		"args": {
			"action": "sync_opdebugs"
		}
	},
]